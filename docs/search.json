[{"path":"https://jorischau.github.io/checkglobals/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Joris Chau Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jorischau.github.io/checkglobals/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joris Chau. Author, maintainer.","code":""},{"path":"https://jorischau.github.io/checkglobals/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chau J (2025). checkglobals: Static Analysis R-Code Dependencies. R package version 0.1.3, https://github.com/JorisChau/checkglobals, https://jorischau.github.io/checkglobals/.","code":"@Manual{,   title = {checkglobals: Static Analysis of R-Code Dependencies},   author = {Joris Chau},   year = {2025},   note = {R package version 0.1.3, https://github.com/JorisChau/checkglobals},   url = {https://jorischau.github.io/checkglobals/}, }"},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"checkglobals","dir":"","previous_headings":"","what":"Static Analysis of R-Code Dependencies","title":"Static Analysis of R-Code Dependencies","text":"minimal {checkglobals}-package allows approximately detect global imported functions variables R-source code R-packages statically inspecting internal syntax trees code, (.e. static code analysis). aim package serve fast light-weight alternative codetools::findGlobals() check R-packages R-scripts missing function imports /variable definitions --fly without need package installation code execution. code inspection procedures implemented using R’s internal C API efficiency, external R-package dependencies strictly required, cli knitr suggested interactive use checking Rmd documents respectively.","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Static Analysis of R-Code Dependencies","text":"","code":"# Install latest release from CRAN: install.packages(\"checkglobals\")  # Install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"JorisChau/checkglobals\")"},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"r-scripts","dir":"","previous_headings":"Example usage","what":"R-scripts","title":"Static Analysis of R-Code Dependencies","text":"{checkglobals}-package contains single wrapper function checkglobals() inspect R-scripts, folders, R-code strings R-packages. Individual R-scripts can scanned global variables imported functions using file argument:   R-script example contains simple R-Shiny application available https://raw.githubusercontent.com/rstudio/shiny-examples/main/004-mpg/app.R.","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"printed-output","dir":"","previous_headings":"Example usage > R-scripts","what":"Printed output","title":"Static Analysis of R-Code Dependencies","text":"Printing S3-object returned checkglobals() outputs: 1. name location unrecognized global variables; 2. name location detected imported functions grouped R-package. location app.R#36 lists R-file name (app.R) line number (36) detected variable function. cli installed cli-hyperlinks supported, clicking location links opens source file pointing given line number. bars counts behind imported package names highlight number function calls detected package. information can used get better sense importance imported package much effort take remove dependency. inspect detected global variables imported functions, index S3-object globals (chk$globals) imports (chk$imports) components. instance, can print detailed source code references unrecognized global variables :","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"remote-files","dir":"","previous_headings":"Example usage > R-scripts","what":"Remote files","title":"Static Analysis of R-Code Dependencies","text":"Instead local file, file argument checkglobals() can also remote file location (e.g. server web), case remote file first downloaded temporary file download.file().","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"r-markdown-files","dir":"","previous_headings":"Example usage","what":"R Markdown files","title":"Static Analysis of R-Code Dependencies","text":"file argument checkglobals() also accepts R Markdown (.Rmd .Rmarkdown) file locations. R Markdown files, R code chunks first extracted temporary R-script knitr::purl(), analyzed checkglobals():   Note: R-packages imported loaded, detected function imports displayed n/reference. can happen checkglobals() falsely ignores one imported functions given package package actually needed dependency. cases useful information . example, tibble loaded order use tribble(), tribble() function also exported dplyr, shows dplyr imports instead.","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"folders","dir":"","previous_headings":"Example usage","what":"Folders","title":"Static Analysis of R-Code Dependencies","text":"Folders containing R-scripts can scanned dir argument checkglobals(), inspects R-scripts present dir. following example scans R-Shiny app folder containing ui.R server.R file (source: https://github.com/rstudio/shiny-examples/tree/main/018-datatable-options),   Note: imports detected R-package installed current R-session, alert printed example . Function calls accessing missing R-package explicitly, using e.g. :: :::, can still fully identified imports checkglobals(). Function calls reference missing R-package listed unrecognized globals.","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"r-packages","dir":"","previous_headings":"Example usage","what":"R-packages","title":"Static Analysis of R-Code Dependencies","text":"R-package folders can scanned pkg argument checkglobals(). Conceptually, checkglobals() scans files /R folder package contrasts detected (unrecognized) globals imports imports listed NAMESPACE file package. R-scripts present elsewhere package (e.g. /inst folder) analyzed, coupled package NAMESPACE file. illustrate, can run checkglobals() package folder:","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"bundled-r-packages","dir":"","previous_headings":"Example usage > R-packages","what":"Bundled R-packages","title":"Static Analysis of R-Code Dependencies","text":"Instead local R-package folders, pkg argument also accepts file paths bundled source R-packages (tar.gz). can either tar.gz package local filesystem, remote file location, web (similar file argument).","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"remote-file-location","dir":"","previous_headings":"Example usage > R-packages > Bundled R-packages","what":"Remote file location:","title":"Static Analysis of R-Code Dependencies","text":"Remark: checkglobals() called without file, dir, text pkg argument, function run current working directory. current working directory R-package folder, identical checkglobals(pkg = \".\"), otherwise behavior checkglobals(dir = \".\").","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"programmatic-use","dir":"","previous_headings":"Example usage","what":"Programmatic use","title":"Static Analysis of R-Code Dependencies","text":"Several methods (e.g. .data.frame, .matrix .character) available cast S3-objects returned checkglobals() common R-objects. can useful programmatic use returned output:","code":"chk <- checkglobals::checkglobals(pkg = \"../checkglobals\")  ## data.frame with globals/imports  as.data.frame(chk) #>                  name package   type #> 1          ansi_align     cli import #> 2          ansi_nchar     cli import #> 3        ansi_strtrim     cli import #> 4         ansi_trimws     cli import #> 5   cli_alert_success     cli import #> 6   cli_alert_warning     cli import #> 7              cli_h1     cli import #> 8      code_highlight     cli import #> 9            col_blue     cli import #> 10          col_green     cli import #> 11           col_grey     cli import #> 12            col_red     cli import #> 13          col_white     cli import #> 14         col_yellow     cli import #> 15      console_width     cli import #> 16         style_bold     cli import #> 17    style_hyperlink     cli import #> 18       style_italic     cli import #> 19             symbol     cli import #> 20               tree     cli import #> 21               purl   knitr import #> 22      download.file   utils import #> 23 installed.packages   utils import #> 24             relist   utils import #> 25              untar   utils import  ## vector of package dependencies checkglobals::as_vector(chk)[[\"package\"]] #> [1] \"cli\"   \"knitr\" \"utils\""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"known-limitations","dir":"","previous_headings":"","what":"Known limitations","title":"Static Analysis of R-Code Dependencies","text":"non-exhaustive list known limitations static code analysis performed checkglobals() keep mind practical use. cases either ambiguous complex analyzed without evaluation code , checkglobals() fails recognize variable name (false negative) falsely detects global variable (false positive).","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"character-variablefunction-names","dir":"","previous_headings":"Known limitations","what":"Character variable/function names","title":"Static Analysis of R-Code Dependencies","text":"","code":"## this works (character arguments are recognized as functions) checkglobals(text = 'do.call(args = list(1), what = \"median\")') checkglobals(text = 'Map(\"g\", 1, n = 1)') checkglobals(text = 'stats::aggregate(x ~ ., data = y, FUN = \"g\")')  ## this doesn't work (evaluation is required) checkglobals(text = 'g <- \"f\"; Map(g, 1, n = 1)') checkglobals(text = \"eval(substitute(g))\") ## same for ~, expression, quote, bquote, Quote, etc. ## this works (calling a function in an exotic way) checkglobals(text = '\"head\"(1:10)') checkglobals(text = '`::`(\"utils\", \"head\")(1:10)') checkglobals(text = 'list(\"function\" = utils::head)$`function`(1:10)')  ## this doesn't work (evaluation is required) checkglobals(text = 'get(\"head\")(1:10)') checkglobals(text = 'methods::getMethod(\"f\", signature = \"ANY\")')"},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"package-loading","dir":"","previous_headings":"Known limitations","what":"Package loading","title":"Static Analysis of R-Code Dependencies","text":"","code":"## this works (simple evaluation of package names) checkglobals(text = 'attachNamespace(\"utils\"); head(1:10)') checkglobals(text = 'pkg <- \"utils\"; library(pkg, character.only = TRUE); head(1:10)')  ## this doesn't work (more complex evaluation is required) checkglobals(text = 'pkg <- function() \"utils\"; library(pkg(), character.only = TRUE); head(1:10)') checkglobals(text = 'loadPkg <- library; loadPkg(utils)') checkglobals(text = 'box::use(utils[...])')"},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"unknown-symbols","dir":"","previous_headings":"Known limitations","what":"Unknown symbols","title":"Static Analysis of R-Code Dependencies","text":"","code":"## this works (special functions self, private, super are recognized) checkglobals(text = 'R6::R6Class(\"cl\",                    public = list(                      initialize = function(...) self$f(...),                      f = function(...) private$p                    ),                    private = list(                      p = list()                    ))')  ## this doesn't work (data masking) checkglobals(text = 'transform(mtcars, mpg2 = mpg^2)') checkglobals(text = 'attach(iris); print(Sepal.Width)')"},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"lazy-evaluation","dir":"","previous_headings":"Known limitations","what":"Lazy evaluation","title":"Static Analysis of R-Code Dependencies","text":"","code":"## this works (basic lazy evaluation) checkglobals(text = '{     addy <- function(y) x + y      x <- 0     addy(1) }') checkglobals(   text = 'function() {      on.exit(rm(x))     x <- 0  }')  ## this doesn't work (lazy evaluation in external functions) checkglobals(   text = 'server <- function(input, output) {     add1x <- shiny::reactive({       add1(input$x)     })     add1 <- function(x) x + 1     }')"},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"useful-references","dir":"","previous_headings":"","what":"Useful references","title":"Static Analysis of R-Code Dependencies","text":"useful functions R-packages design goals /functionality related {checkglobals} include: codetools::findGlobals(), detects global variables R-scripts via static code analysis. codetools functions underlie source code checks run R CMD check. globals, R-package H. Bengtsson providing re-implementation functions codetools identify global variables using various strategies export parallel computations. renv::dependencies(), detects R-package dependencies scanning R-files project imported functions packages via static code analysis. lintr, R-package J. Hester others perform general static code analysis R projects. lintr::object_usage_linter() provides wrapper codetools::checkUsage() detect global variables similar R CMD check.","code":""},{"path":"https://jorischau.github.io/checkglobals/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Static Analysis of R-Code Dependencies","text":"MIT","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to character — as.character.checkglobals","title":"Cast to character — as.character.checkglobals","text":"Cast S3-object class \"checkglobals\" character vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to character — as.character.checkglobals","text":"","code":"# S3 method for class 'checkglobals' as.character(x, pattern, which = c(\"global\", \"import\"), ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to character — as.character.checkglobals","text":"x object inheriting class \"checkglobals\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to character — as.character.checkglobals","text":"character vector containing names global imported function/variables.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to character — as.character.checkglobals","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.character(chk) #>  [1] \"%>%\"             \"fAttach2\"        \"fLoad2\"          \"g\"               #>  [5] \"R6Class\"         \"aggregate\"       \"approxfun\"       \"coef\"            #>  [9] \"getMethod\"       \"globalVariables\" \"head\"            \"is.unit\"         #> [13] \"maintainer\"      \"median\"          \"pvec\"            \"sd\"              #> [17] \"setGeneric\"      \"setMethod\"       \"tail\"             ## include only imports as.character(chk, which = \"import\") #>  [1] \"R6Class\"         \"aggregate\"       \"approxfun\"       \"coef\"            #>  [5] \"getMethod\"       \"globalVariables\" \"head\"            \"is.unit\"         #>  [9] \"maintainer\"      \"median\"          \"pvec\"            \"sd\"              #> [13] \"setGeneric\"      \"setMethod\"       \"tail\""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to character — as.character.checkglobalsg","title":"Cast to character — as.character.checkglobalsg","text":"Cast S3-object class \"checkglobalsg\" character vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to character — as.character.checkglobalsg","text":"","code":"# S3 method for class 'checkglobalsg' as.character(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to character — as.character.checkglobalsg","text":"x object inheriting class \"checkglobalsg\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to character — as.character.checkglobalsg","text":"character vector similar .character.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to character — as.character.checkglobalsg","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.character(chk$globals) #> [1] \"%>%\"      \"fAttach2\" \"fLoad2\"   \"g\""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to character — as.character.checkglobalsi","title":"Cast to character — as.character.checkglobalsi","text":"Cast S3-object class \"checkglobalsi\" character vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to character — as.character.checkglobalsi","text":"","code":"# S3 method for class 'checkglobalsi' as.character(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to character — as.character.checkglobalsi","text":"x object inheriting class \"checkglobalsi\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to character — as.character.checkglobalsi","text":"character vector similar .character.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.character.checkglobalsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to character — as.character.checkglobalsi","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.character(chk$imports) #>  [1] \"R6Class\"         \"aggregate\"       \"approxfun\"       \"coef\"            #>  [5] \"getMethod\"       \"globalVariables\" \"head\"            \"is.unit\"         #>  [9] \"maintainer\"      \"median\"          \"pvec\"            \"sd\"              #> [13] \"setGeneric\"      \"setMethod\"       \"tail\""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to data.frame — as.data.frame.checkglobals","title":"Cast to data.frame — as.data.frame.checkglobals","text":"Cast S3-object class \"checkglobals\" data.frame.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to data.frame — as.data.frame.checkglobals","text":"","code":"# S3 method for class 'checkglobals' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   pattern,   which = c(\"global\", \"import\"),   ... )"},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to data.frame — as.data.frame.checkglobals","text":"x object inheriting class \"checkglobals\". row.names currently used, included compatibility .data.frame generic. optional currently used, included compatibility .data.frame generic. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to data.frame — as.data.frame.checkglobals","text":"data.frame three character columns: name, name global imported function/variable. package, import package, applies imported functions/variables. type, type detected entity, either \"global\" \"import\".","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to data.frame — as.data.frame.checkglobals","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.data.frame(chk) #>               name  package   type #> 1              %>%     <NA> global #> 2         fAttach2     <NA> global #> 3           fLoad2     <NA> global #> 4                g     <NA> global #> 5          R6Class       R6 import #> 6          is.unit     grid import #> 7        getMethod  methods import #> 8       setGeneric  methods import #> 9        setMethod  methods import #> 10            pvec parallel import #> 11       aggregate    stats import #> 12       approxfun    stats import #> 13            coef    stats import #> 14          median    stats import #> 15              sd    stats import #> 16            coef   stats4 import #> 17 globalVariables    utils import #> 18            head    utils import #> 19      maintainer    utils import #> 20            tail    utils import  ## include only selected imports as.data.frame(chk, pattern = \"coef\", which = \"import\") #>   name package   type #> 1 coef   stats import #> 2 coef  stats4 import"},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to data.frame — as.data.frame.checkglobalsg","title":"Cast to data.frame — as.data.frame.checkglobalsg","text":"Cast S3-object class \"checkglobalsg\" data.frame.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to data.frame — as.data.frame.checkglobalsg","text":"","code":"# S3 method for class 'checkglobalsg' as.data.frame(x, row.names = NULL, optional = FALSE, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to data.frame — as.data.frame.checkglobalsg","text":"x object inheriting class \"checkglobalsg\". row.names currently used, included compatibility .data.frame generic. optional currently used, included compatibility .data.frame generic. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to data.frame — as.data.frame.checkglobalsg","text":"data.frame similar format .data.frame.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to data.frame — as.data.frame.checkglobalsg","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.data.frame(chk$globals) #>       name package   type #> 1      %>%    <NA> global #> 2 fAttach2    <NA> global #> 3   fLoad2    <NA> global #> 4        g    <NA> global"},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to data.frame — as.data.frame.checkglobalsi","title":"Cast to data.frame — as.data.frame.checkglobalsi","text":"Cast S3-object class \"checkglobalsi\" data.frame.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to data.frame — as.data.frame.checkglobalsi","text":"","code":"# S3 method for class 'checkglobalsi' as.data.frame(x, row.names = NULL, optional = FALSE, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to data.frame — as.data.frame.checkglobalsi","text":"x object inheriting class \"checkglobalsi\". row.names currently used, included compatibility .data.frame generic. optional currently used, included compatibility .data.frame generic. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to data.frame — as.data.frame.checkglobalsi","text":"data.frame similar format .data.frame.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.data.frame.checkglobalsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to data.frame — as.data.frame.checkglobalsi","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.data.frame(chk$imports) #>               name  package   type #> 1          R6Class       R6 import #> 2          is.unit     grid import #> 3        getMethod  methods import #> 4       setGeneric  methods import #> 5        setMethod  methods import #> 6             pvec parallel import #> 7        aggregate    stats import #> 8        approxfun    stats import #> 9             coef    stats import #> 10          median    stats import #> 11              sd    stats import #> 12            coef   stats4 import #> 13 globalVariables    utils import #> 14            head    utils import #> 15      maintainer    utils import #> 16            tail    utils import"},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to matrix — as.matrix.checkglobals","title":"Cast to matrix — as.matrix.checkglobals","text":"Cast S3-object class \"checkglobals\" matrix.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to matrix — as.matrix.checkglobals","text":"","code":"# S3 method for class 'checkglobals' as.matrix(x, pattern, which = c(\"global\", \"import\"), ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to matrix — as.matrix.checkglobals","text":"x object inheriting class \"checkglobals\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to matrix — as.matrix.checkglobals","text":"character matrix three columns: name, name global imported function/variable. package, import package, applies imported functions/variables. type, type detected entity, either \"global\" \"import\".","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to matrix — as.matrix.checkglobals","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.matrix(chk) #>       name              package    type     #>  [1,] \"%>%\"             NA         \"global\" #>  [2,] \"fAttach2\"        NA         \"global\" #>  [3,] \"fLoad2\"          NA         \"global\" #>  [4,] \"g\"               NA         \"global\" #>  [5,] \"R6Class\"         \"R6\"       \"import\" #>  [6,] \"is.unit\"         \"grid\"     \"import\" #>  [7,] \"getMethod\"       \"methods\"  \"import\" #>  [8,] \"setGeneric\"      \"methods\"  \"import\" #>  [9,] \"setMethod\"       \"methods\"  \"import\" #> [10,] \"pvec\"            \"parallel\" \"import\" #> [11,] \"aggregate\"       \"stats\"    \"import\" #> [12,] \"approxfun\"       \"stats\"    \"import\" #> [13,] \"coef\"            \"stats\"    \"import\" #> [14,] \"median\"          \"stats\"    \"import\" #> [15,] \"sd\"              \"stats\"    \"import\" #> [16,] \"coef\"            \"stats4\"   \"import\" #> [17,] \"globalVariables\" \"utils\"    \"import\" #> [18,] \"head\"            \"utils\"    \"import\" #> [19,] \"maintainer\"      \"utils\"    \"import\" #> [20,] \"tail\"            \"utils\"    \"import\"  ## include only selected imports as.matrix(chk, pattern = \"coef\", which = \"import\") #>      name   package  type     #> [1,] \"coef\" \"stats\"  \"import\" #> [2,] \"coef\" \"stats4\" \"import\""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to matrix — as.matrix.checkglobalsg","title":"Cast to matrix — as.matrix.checkglobalsg","text":"Cast S3-object class \"checkglobalsg\" matrix.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to matrix — as.matrix.checkglobalsg","text":"","code":"# S3 method for class 'checkglobalsg' as.matrix(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to matrix — as.matrix.checkglobalsg","text":"x object inheriting class \"checkglobalsg\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to matrix — as.matrix.checkglobalsg","text":"matrix similar format .matrix.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to matrix — as.matrix.checkglobalsg","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.matrix(chk$globals) #>      name       package type     #> [1,] \"%>%\"      NA      \"global\" #> [2,] \"fAttach2\" NA      \"global\" #> [3,] \"fLoad2\"   NA      \"global\" #> [4,] \"g\"        NA      \"global\""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to matrix — as.matrix.checkglobalsi","title":"Cast to matrix — as.matrix.checkglobalsi","text":"Cast S3-object class \"checkglobalsi\" matrix.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to matrix — as.matrix.checkglobalsi","text":"","code":"# S3 method for class 'checkglobalsi' as.matrix(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to matrix — as.matrix.checkglobalsi","text":"x object inheriting class \"checkglobalsi\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to matrix — as.matrix.checkglobalsi","text":"matrix similar format .matrix.checkglobals.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as.matrix.checkglobalsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to matrix — as.matrix.checkglobalsi","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as.matrix(chk$imports) #>       name              package    type     #>  [1,] \"R6Class\"         \"R6\"       \"import\" #>  [2,] \"is.unit\"         \"grid\"     \"import\" #>  [3,] \"getMethod\"       \"methods\"  \"import\" #>  [4,] \"setGeneric\"      \"methods\"  \"import\" #>  [5,] \"setMethod\"       \"methods\"  \"import\" #>  [6,] \"pvec\"            \"parallel\" \"import\" #>  [7,] \"aggregate\"       \"stats\"    \"import\" #>  [8,] \"approxfun\"       \"stats\"    \"import\" #>  [9,] \"coef\"            \"stats\"    \"import\" #> [10,] \"median\"          \"stats\"    \"import\" #> [11,] \"sd\"              \"stats\"    \"import\" #> [12,] \"coef\"            \"stats4\"   \"import\" #> [13,] \"globalVariables\" \"utils\"    \"import\" #> [14,] \"head\"            \"utils\"    \"import\" #> [15,] \"maintainer\"      \"utils\"    \"import\" #> [16,] \"tail\"            \"utils\"    \"import\""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to list vector — as_vector.checkglobals","title":"Cast to list vector — as_vector.checkglobals","text":"Cast S3-object class \"checkglobals\" list vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to list vector — as_vector.checkglobals","text":"","code":"# S3 method for class 'checkglobals' as_vector(x, pattern, which = c(\"global\", \"import\"), ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to list vector — as_vector.checkglobals","text":"x object inheriting class \"checkglobals\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to list vector — as_vector.checkglobals","text":"list consisting three character vectors: global, vector global function/variable names. import, vector import function/variable names. package, vector import package names.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to list vector — as_vector.checkglobals","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as_vector(chk) #> $global #> [1] \"%>%\"      \"fAttach2\" \"fLoad2\"   \"g\"        #>  #> $import #>  [1] \"R6Class\"         \"aggregate\"       \"approxfun\"       \"coef\"            #>  [5] \"getMethod\"       \"globalVariables\" \"head\"            \"is.unit\"         #>  [9] \"maintainer\"      \"median\"          \"pvec\"            \"sd\"              #> [13] \"setGeneric\"      \"setMethod\"       \"tail\"            #>  #> $package #> [1] \"R6\"       \"grid\"     \"methods\"  \"parallel\" \"stats\"    \"stats4\"   \"utils\"    #>   ## include only selected imports as_vector(chk, pattern = \"coef\", which = \"import\") #> $import #> [1] \"coef\" #>  #> $package #> [1] \"stats\"  \"stats4\" #>"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to list vector — as_vector.checkglobalsg","title":"Cast to list vector — as_vector.checkglobalsg","text":"Cast S3-object class \"checkglobalsg\" list vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to list vector — as_vector.checkglobalsg","text":"","code":"# S3 method for class 'checkglobalsg' as_vector(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to list vector — as_vector.checkglobalsg","text":"x object inheriting class \"checkglobalsg\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to list vector — as_vector.checkglobalsg","text":"list consisting one character vector: global, vector global function/variable names.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to list vector — as_vector.checkglobalsg","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as_vector(chk$globals) #> $global #> [1] \"%>%\"      \"fAttach2\" \"fLoad2\"   \"g\"        #>"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to list vector — as_vector.checkglobalsi","title":"Cast to list vector — as_vector.checkglobalsi","text":"Cast S3-object class \"checkglobalsi\" list vector.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to list vector — as_vector.checkglobalsi","text":"","code":"# S3 method for class 'checkglobalsi' as_vector(x, pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to list vector — as_vector.checkglobalsi","text":"x object inheriting class \"checkglobalsi\". pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure output: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. sorted, logical value indicating function/variable names sorted alphabetically. Defaults TRUE.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to list vector — as_vector.checkglobalsi","text":"list consisting two character vectors: import, vector import function/variable names. package, vector import package names.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.checkglobalsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast to list vector — as_vector.checkglobalsi","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) as_vector(chk$imports) #> $import #>  [1] \"R6Class\"         \"aggregate\"       \"approxfun\"       \"coef\"            #>  [5] \"getMethod\"       \"globalVariables\" \"head\"            \"is.unit\"         #>  [9] \"maintainer\"      \"median\"          \"pvec\"            \"sd\"              #> [13] \"setGeneric\"      \"setMethod\"       \"tail\"            #>  #> $package #> [1] \"R6\"       \"grid\"     \"methods\"  \"parallel\" \"stats\"    \"stats4\"   \"utils\"    #>"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast to list vector generic — as_vector","title":"Cast to list vector generic — as_vector","text":"as_vector generic function cast objects returned checkglobals, check_pkg check_source list vectors. function invokes particular methods depend class first argument.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast to list vector generic — as_vector","text":"","code":"as_vector(x, pattern, which, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast to list vector generic — as_vector","text":"x S3-object convert. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure returned output.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/as_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast to list vector generic — as_vector","text":"list character vectors.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/check_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check R-packages for globals and imports — check_pkg","title":"Check R-packages for globals and imports — check_pkg","text":"Approximately detect global imported functions variables R-packages static code analysis. Conceptually, function inspects files package R-folder contrasts detected (unrecognized) globals imports imports listed NAMESPACE R-package. R-scripts present elsewhere package (.e. R-folder) scanned, coupled package NAMESPACE file.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/check_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check R-packages for globals and imports — check_pkg","text":"","code":"check_pkg(pkg = \".\", include_compiled = FALSE, skip_globals = NULL)"},{"path":"https://jorischau.github.io/checkglobals/reference/check_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check R-packages for globals and imports — check_pkg","text":"pkg character path R-package, can either: local R-package folder; path bundled (tar.gz) R-package local filesystem; remote path bundled (tar.gz) R-package, (e.g. remote server web). include_compiled logical value indicating compiled functions called .Call, .C, .External, .Fortran included global variables. skip_globals optional character vector names skip/exclude (unrecognized) global variables.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/check_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check R-packages for globals and imports — check_pkg","text":"list S3-object class \"checkglobals\" three components: globals, list class \"checkglobalsg\" imports, list class \"checkglobalsi\" missing_packages, character vector missing packages programmatic use, cast returned S3-object .data.frame, .matrix, .character as_vector.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/check_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check R-packages for globals and imports — check_pkg","text":"","code":"## from R-package folder check_pkg(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) #> ! Packages required but not installed: pkgA #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/21 #>   ├─ getMethod       functions1.R#73 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel       [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ pvec            functions1.R#94 and 1 more... #>  pkgA           [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/21 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ coef            functions1.R#75 and 1 more... #>  tools          [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/21 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## from bundled R-package # \\donttest{   check_pkg(     pkg = \"https://cran.r-project.org/src/contrib/tinytest_1.4.1.tar.gz\"   ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #> ✔ None detected #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  grDevices   [◼◼◻◻◻◻◻◻◻◻] 2/13 #>   ├─ dev.off          tinytest.R#560 #>   └─ pdf              tinytest.R#589 #>  parallel    [◼◼◼◼◼◼◼◻◻◻] 7/13 #>   ├─ clusterCall      tinytest.R#1046 #>   ├─ clusterEvalQ     tinytest.R#880 and 1 more... #>   ├─ clusterExport    tinytest.R#1043 #>   ├─ makeCluster      tinytest.R#1030 #>   ├─ parLapply        tinytest.R#881 #>   └─ stopCluster      tinytest.R#1000 #>  utils       [◼◼◼◼◻◻◻◻◻◻] 4/13 #>   ├─ capture.output   methods.R#197 #>   ├─ file_test        tinytest.R#570 #>   ├─ getFromNamespace tinytest.R#384 #>   └─ install.packages tinytest.R#1140 # }"},{"path":"https://jorischau.github.io/checkglobals/reference/check_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Check R-scripts, folders or R-code strings for globals and imports — check_source","title":"Check R-scripts, folders or R-code strings for globals and imports — check_source","text":"Approximately detect global imported functions variables R-scripts, folders R-code strings static code analysis. inspection individual R-scripts use `file` argument, R-code strings use `text` argument, folders containing R-scripts use `dir` argument. function require executing code inspection.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/check_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check R-scripts, folders or R-code strings for globals and imports — check_source","text":"","code":"check_source(file, text, dir, include_compiled = FALSE, skip_globals = NULL)"},{"path":"https://jorischau.github.io/checkglobals/reference/check_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check R-scripts, folders or R-code strings for globals and imports — check_source","text":"file character path R-script analyze, can either file local filesystem remote file location (e.g. server web). text character R-code string analyze. dir character path folder R-scripts analyze. include_compiled logical value indicating compiled functions called .Call, .C, .External, .Fortran included global variables. skip_globals optional character vector names skip/exclude (unrecognized) global variables.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/check_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check R-scripts, folders or R-code strings for globals and imports — check_source","text":"list S3-object class \"checkglobals\" three components: globals, list class \"checkglobalsg\" imports, list class \"checkglobalsi\" missing_packages, character vector missing packages programmatic use, cast returned S3-object .data.frame, .matrix, .character as_vector.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/check_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check R-scripts, folders or R-code strings for globals and imports — check_source","text":"","code":"## local R-script check_source(   file = system.file(     \"unit_tests\", \"pkg\", \"testpkg\", \"R\", \"functions1.R\",     package = \"checkglobals\"   ) ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>      <location> #>  %>%()       functions1.R#97 #>  G           functions1.R#12 #>  dataset     functions1.R#135 #>  fAttach()   functions1.R#152 #>  fLoad()     functions1.R#150 #>  fLoad2()    functions1.R#156 #>  g           functions1.R#5 and 12 more... #>  getMethod() functions1.R#73 #>  pvec()      functions1.R#94 and 1 more... #>  sysdata     functions1.R#136 #>  xauth       functions1.R#151 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ R6Class    functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/17 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ is.unit    functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/17 #>   ├─ getMethod  functions1.R#72 #>   ├─ setGeneric functions1.R#54 #>   └─ setMethod  functions1.R#55 #>  parallel       [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ pvec       functions1.R#96 #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/17 #>   ├─ aggregate  functions1.R#93 #>   ├─ approxfun  functions1.R#77 #>   ├─ coef       functions1.R#75 and 1 more... #>   ├─ median     functions1.R#31 and 1 more... #>   └─ sd         functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/17 #>   └─ coef       functions1.R#75 and 1 more... #>  utils          [◼◼◻◻◻◻◻◻◻◻] 2/17 #>   ├─ head       functions1.R#26 #>   └─ tail       functions1.R#71  ## local R-folder check_source(   dir = system.file(     \"unit_tests\", \"pkg\", \"testpkg\", \"R\",     package = \"checkglobals\"   ) ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>      <location> #>  %>%()       functions1.R#97 #>  G           functions1.R#12 #>  dataset     functions1.R#135 #>  fAttach()   functions1.R#152 #>  fLoad()     functions1.R#150 #>  fLoad2()    functions1.R#156 #>  g           aaa.R#2 and 13 more... #>  getMethod() functions1.R#73 #>  pvec()      functions1.R#94 and 1 more... #>  sysdata     functions1.R#136 #>  xauth       functions1.R#151 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/20 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/20 #>   ├─ getMethod       functions1.R#72 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel       [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ pvec            functions1.R#96 #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/20 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/20 #>   └─ coef            functions1.R#75 and 1 more... #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/20 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## R-code string check_source(text = \"cc <- function(m) stats::coef(m)\") #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #> ✔ None detected #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  stats   [◼◻◻◻◻◻◻◻◻◻] 1/1 #>   └─ coef <text>#1  ## R-script from remote location # \\donttest{   check_source(     file = \"https://raw.githubusercontent.com/rstudio/shiny-examples/main/004-mpg/app.R\"   ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>       <location> #>  as.formula() app.R#66 #>  boxplot()    app.R#66 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  datasets   [◼◻◻◻◻◻◻◻◻◻] 1/15 #>   └─ mtcars        app.R#8 #>  shiny      [◼◼◼◼◼◼◼◼◼◼] 14/15 #>   ├─ checkboxInput app.R#13 #>   ├─ fluidPage     app.R#13 #>   ├─ h3            app.R#13 #>   ├─ mainPanel     app.R#13 #>   ├─ plotOutput    app.R#13 #>   ├─ reactive      app.R#54 #>   ├─ renderPlot    app.R#65 #>   ├─ renderText    app.R#59 #>   ├─ selectInput   app.R#13 #>   ├─ shinyApp      app.R#75 #>   ├─ sidebarLayout app.R#13 #>   ├─ sidebarPanel  app.R#13 #>   ├─ textOutput    app.R#13 #>   └─ titlePanel    app.R#13 # }"},{"path":"https://jorischau.github.io/checkglobals/reference/checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Check R-source code or R-packages for globals and imports — checkglobals","title":"Check R-source code or R-packages for globals and imports — checkglobals","text":"Approximately detect global imported functions variables R-scripts, folders, R-code strings R-packages static code analysis. function simply convenience wrapper around check_source check_pkg return value calling functions directly. called without file, dir, text pkg argument, function run current working directory. current working directory R-package folder, identical checkglobals(pkg = \".\"), otherwise behavior checkglobals(dir = \".\").","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check R-source code or R-packages for globals and imports — checkglobals","text":"","code":"checkglobals(..., include_compiled = FALSE, skip_globals = NULL)"},{"path":"https://jorischau.github.io/checkglobals/reference/checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check R-source code or R-packages for globals and imports — checkglobals","text":"... can one following arguments: file, file character path R-script analyze, can either file local filesystem remote file location (e.g. server web). text, character R-code string analyze. dir, character path folder R-scripts analyze. pkg, character path R-package, can either: local R-package folder; path bundled (tar.gz) R-package local filesystem; remote path bundled (tar.gz) R-package, (e.g. remote server web). include_compiled logical value indicating compiled functions called .Call, .C, .External, .Fortran included global variables. skip_globals optional character vector names skip/exclude (unrecognized) global variables.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check R-source code or R-packages for globals and imports — checkglobals","text":"list S3-object class \"checkglobals\" three components: globals, list class \"checkglobalsg\" imports, list class \"checkglobalsi\" missing_packages, character vector missing packages programmatic use, cast returned S3-object .data.frame, .matrix, .character as_vector.","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check R-source code or R-packages for globals and imports — checkglobals","text":"","code":"## local R-script checkglobals(   file = system.file(     \"unit_tests\", \"pkg\", \"testpkg\", \"R\", \"functions1.R\",     package = \"checkglobals\"   ) ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>      <location> #>  %>%()       functions1.R#97 #>  G           functions1.R#12 #>  dataset     functions1.R#135 #>  fAttach()   functions1.R#152 #>  fLoad()     functions1.R#150 #>  fLoad2()    functions1.R#156 #>  g           functions1.R#5 and 12 more... #>  getMethod() functions1.R#73 #>  pvec()      functions1.R#94 and 1 more... #>  sysdata     functions1.R#136 #>  xauth       functions1.R#151 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ R6Class    functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/17 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ is.unit    functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/17 #>   ├─ getMethod  functions1.R#72 #>   ├─ setGeneric functions1.R#54 #>   └─ setMethod  functions1.R#55 #>  parallel       [◼◻◻◻◻◻◻◻◻◻] 1/17 #>   └─ pvec       functions1.R#96 #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/17 #>   ├─ aggregate  functions1.R#93 #>   ├─ approxfun  functions1.R#77 #>   ├─ coef       functions1.R#75 and 1 more... #>   ├─ median     functions1.R#31 and 1 more... #>   └─ sd         functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/17 #>   └─ coef       functions1.R#75 and 1 more... #>  utils          [◼◼◻◻◻◻◻◻◻◻] 2/17 #>   ├─ head       functions1.R#26 #>   └─ tail       functions1.R#71  ## local R-folder checkglobals(   dir = system.file(     \"unit_tests\", \"pkg\", \"testpkg\", \"R\",     package = \"checkglobals\") ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>      <location> #>  %>%()       functions1.R#97 #>  G           functions1.R#12 #>  dataset     functions1.R#135 #>  fAttach()   functions1.R#152 #>  fLoad()     functions1.R#150 #>  fLoad2()    functions1.R#156 #>  g           aaa.R#2 and 13 more... #>  getMethod() functions1.R#73 #>  pvec()      functions1.R#94 and 1 more... #>  sysdata     functions1.R#136 #>  xauth       functions1.R#151 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/20 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/20 #>   ├─ getMethod       functions1.R#72 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel       [◼◻◻◻◻◻◻◻◻◻] 1/20 #>   └─ pvec            functions1.R#96 #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/20 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/20 #>   └─ coef            functions1.R#75 and 1 more... #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/20 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## R-code string checkglobals(text = \"cc <- function(m) stats::coef(m)\") #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #> ✔ None detected #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  stats   [◼◻◻◻◻◻◻◻◻◻] 1/1 #>   └─ coef <text>#1  ## R-package from folder checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) #> ! Packages required but not installed: pkgA #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/21 #>   ├─ getMethod       functions1.R#73 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel       [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ pvec            functions1.R#94 and 1 more... #>  pkgA           [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/21 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ coef            functions1.R#75 and 1 more... #>  tools          [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/21 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## R-script from remote location # \\donttest{ checkglobals(   file = \"https://raw.githubusercontent.com/rstudio/shiny-examples/main/004-mpg/app.R\" ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>       <location> #>  as.formula() app.R#66 #>  boxplot()    app.R#66 #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  datasets   [◼◻◻◻◻◻◻◻◻◻] 1/15 #>   └─ mtcars        app.R#8 #>  shiny      [◼◼◼◼◼◼◼◼◼◼] 14/15 #>   ├─ checkboxInput app.R#13 #>   ├─ fluidPage     app.R#13 #>   ├─ h3            app.R#13 #>   ├─ mainPanel     app.R#13 #>   ├─ plotOutput    app.R#13 #>   ├─ reactive      app.R#54 #>   ├─ renderPlot    app.R#65 #>   ├─ renderText    app.R#59 #>   ├─ selectInput   app.R#13 #>   ├─ shinyApp      app.R#75 #>   ├─ sidebarLayout app.R#13 #>   ├─ sidebarPanel  app.R#13 #>   ├─ textOutput    app.R#13 #>   └─ titlePanel    app.R#13 # }  ## R-package from remote location # \\donttest{ check_pkg(   pkg = \"https://cran.r-project.org/src/contrib/tinytest_1.4.1.tar.gz\",   skip_globals = \"cluster\" ) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #> ✔ None detected #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  grDevices   [◼◼◻◻◻◻◻◻◻◻] 2/13 #>   ├─ dev.off          tinytest.R#560 #>   └─ pdf              tinytest.R#589 #>  parallel    [◼◼◼◼◼◼◼◻◻◻] 7/13 #>   ├─ clusterCall      tinytest.R#1046 #>   ├─ clusterEvalQ     tinytest.R#880 and 1 more... #>   ├─ clusterExport    tinytest.R#1043 #>   ├─ makeCluster      tinytest.R#1030 #>   ├─ parLapply        tinytest.R#881 #>   └─ stopCluster      tinytest.R#1000 #>  utils       [◼◼◼◼◻◻◻◻◻◻] 4/13 #>   ├─ capture.output   methods.R#197 #>   ├─ file_test        tinytest.R#570 #>   ├─ getFromNamespace tinytest.R#384 #>   └─ install.packages tinytest.R#1140 # }"},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobals.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ","title":"Print ","text":"Print method S3-objects class \"checkglobals\" returned checkglobals, check_pkg check_source. Prints name location unrecognized global variables; name location detected imported functions grouped R-package. location consists source file name line number. cli installed cli-hyperlinks supported console, clicking location links opens source file given line number. bars printed behind import package names filled based absolute number detected imports per package.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ","text":"","code":"# S3 method for class 'checkglobals' print(   x,   format = c(\"basic\", \"detail\"),   pattern,   which = c(\"global\", \"import\"),   ... )"},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ","text":"x object inheriting class \"checkglobals\". format character, one following two choices: \"basic\", (default) prints name source code location detected globals imports. \"detail\", prints name location detected globals imports, well lines source code file comprising detected globals imports. maximum number lines printed per source code reference can specified using maxLines. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. character vector, either \"global\" print unrecognized global variables, \"import\" print detected imported functions variables, (default). ... additional arguments configure printed output. following arguments can specified: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. includePkgs, character vector imported package names. imports packages printed. Defaults NA, includes detected packages printed output. maxRef, maximum number printed source code references per detected global/import. Defaults 1. maxLines, maximum number printed lines per source code reference, used format = \"detail\". Defaults 5. use_cli, logical value indicating cli used format printed output. Defaults TRUE, means cli-formatting attempted cli installed. maxWidth, maximum column width printed output. cli installed, default width determined cli::console_width(). cli installed, getOption(\"width\") checked. getOption(\"width\") undefined, column width defaults 80.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ","text":"Returns object x invisibly (via invisible).","code":""},{"path":[]},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) chk #> ! Packages required but not installed: pkgA #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/21 #>   ├─ getMethod       functions1.R#73 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel       [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ pvec            functions1.R#94 and 1 more... #>  pkgA           [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/21 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ coef            functions1.R#75 and 1 more... #>  tools          [◻◻◻◻◻◻◻◻◻◻] 0/21 #>   └─ n/a #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/21 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## print globals with references to source code print(chk, format = \"detail\", which = \"global\", maxRef = 99) #> ! Packages required but not installed: pkgA #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Global source code references ─────────────────────────────────────────────── #>  #> • %>% at functions1.R#97: #>     97: y %>% #>     98:     sapply(\"g\", n = 1) #> • fAttach2 at aaa.R#13: #>     13: fAttach2(x) #> • fLoad2 at functions1.R#156: #>     156: fLoad2(y) #> • g at aaa.R#2: #>     2: utils::globalVariables(g) #>   g at functions1.R#5: #>     5: ff1(g + y) #>   g at functions1.R#23: #>     23: requireNamespace(g) #>   g at functions1.R#85: #>     85: g #>   g at functions1.R#89: #>     89: do.call(args = list(y), what = \"g\") #>   g at functions1.R#90: #>     90: lapply(FUN = \"g\", 1, n = 1) #>   g at functions1.R#91: #>     91: lapply(X = 1, \"g\") #>   g at functions1.R#92: #>     92: Map(\"g\", 1, n = 1) #>   g at functions1.R#93: #>     93: stats::aggregate(x ~ ., data = y, FUN = \"g\") #>   g at functions1.R#94: #>     94: pvec(1, \"g\") #>   g at functions1.R#96: #>     96: parallel::pvec(mc.cores = 1L, 1, \"g\") #>   g at functions1.R#97: #>     97: y %>% #>     98:     sapply(\"g\", n = 1) #>   g at functions1.R#114: #>     114: g(1, y) #>   g at functions1.R#121: #>     121: g  ## print selected imports print(chk, format = \"detail\", pattern = \"coef\", which = \"import\", maxRef = 99) #> ! Packages required but not installed: pkgA #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  stats    [◼◼◻◻◻◻◻◻◻◻] 2/4 #>   └─ coef functions1.R#75 and 1 more... #>  stats4   [◼◼◻◻◻◻◻◻◻◻] 2/4 #>   └─ coef functions1.R#75 and 1 more... #>  #> ── Import source code references ─────────────────────────────────────────────── #>  #> • coef at functions1.R#75: #>     75: stats::coef(y) #>   coef at functions1.R#76: #>     76: stats4::coef(y)  ## print without cli-formatting print(chk, use_cli = FALSE) #> ! Packages required but not installed: pkgA #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6             [◼◻◻◻◻◻◻◻◻◻] 1/21 #>    • R6Class         functions1.R#139 #>  checkglobals   [◻◻◻◻◻◻◻◻◻◻] 0/21 #>    • n/a #>  grid           [◼◻◻◻◻◻◻◻◻◻] 1/21 #>    • is.unit         functions1.R#35 #>  methods        [◼◼◼◻◻◻◻◻◻◻] 3/21 #>    • getMethod       functions1.R#73 #>    • setGeneric      functions1.R#54 #>    • setMethod       functions1.R#55 #>  parallel       [◼◼◻◻◻◻◻◻◻◻] 2/21 #>    • pvec            functions1.R#94 and 1 more... #>  pkgA           [◻◻◻◻◻◻◻◻◻◻] 0/21 #>    • n/a #>  stats          [◼◼◼◼◼◼◼◻◻◻] 7/21 #>    • aggregate       functions1.R#93 #>    • approxfun       functions1.R#77 #>    • coef            functions1.R#75 and 1 more... #>    • median          functions1.R#31 and 1 more... #>    • sd              functions1.R#161 #>  stats4         [◼◼◻◻◻◻◻◻◻◻] 2/21 #>    • coef            functions1.R#75 and 1 more... #>  tools          [◻◻◻◻◻◻◻◻◻◻] 0/21 #>    • n/a #>  utils          [◼◼◼◼◼◻◻◻◻◻] 5/21 #>    • globalVariables aaa.R#1 and 1 more... #>    • head            functions1.R#26 #>    • maintainer      aaa.R#8 #>    • tail            functions1.R#71"},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ","title":"Print ","text":"Print method S3-objects class \"checkglobalsg\" characteristic \"globals\" list element \"checkglobals\" objects returned checkglobals, check_pkg check_source.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ","text":"","code":"# S3 method for class 'checkglobalsg' print(x, format = \"basic\", pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ","text":"x object inheriting class \"checkglobalsg\". format character, one following two choices: \"basic\", (default) prints name source code location detected globals. \"detail\", prints name location detected globals, well lines source code file comprising detected globals. maximum number lines printed per source code reference can specified using maxLines. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure printed output. following arguments can specified: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. includePkgs, character vector imported package names. imports packages printed. Defaults NA, includes detected packages printed output. maxRef, maximum number printed source code references per detected global/import. Defaults 1. maxLines, maximum number printed lines per source code reference, used format = \"detail\". Defaults 5. use_cli, logical value indicating cli used format printed output. Defaults TRUE, means cli-formatting attempted cli installed. maxWidth, maximum column width printed output. cli installed, default width determined cli::console_width(). cli installed, getOption(\"width\") checked. getOption(\"width\") undefined, column width defaults 80.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ","text":"Returns object x invisibly (via invisible)","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) chk$globals #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more...  ## print globals with references to source code print(chk$globals, format = \"detail\", maxRef = 99) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more... #>  #> ── Global source code references ─────────────────────────────────────────────── #>  #> • %>% at functions1.R#97: #>     97: y %>% #>     98:     sapply(\"g\", n = 1) #> • fAttach2 at aaa.R#13: #>     13: fAttach2(x) #> • fLoad2 at functions1.R#156: #>     156: fLoad2(y) #> • g at aaa.R#2: #>     2: utils::globalVariables(g) #>   g at functions1.R#5: #>     5: ff1(g + y) #>   g at functions1.R#23: #>     23: requireNamespace(g) #>   g at functions1.R#85: #>     85: g #>   g at functions1.R#89: #>     89: do.call(args = list(y), what = \"g\") #>   g at functions1.R#90: #>     90: lapply(FUN = \"g\", 1, n = 1) #>   g at functions1.R#91: #>     91: lapply(X = 1, \"g\") #>   g at functions1.R#92: #>     92: Map(\"g\", 1, n = 1) #>   g at functions1.R#93: #>     93: stats::aggregate(x ~ ., data = y, FUN = \"g\") #>   g at functions1.R#94: #>     94: pvec(1, \"g\") #>   g at functions1.R#96: #>     96: parallel::pvec(mc.cores = 1L, 1, \"g\") #>   g at functions1.R#97: #>     97: y %>% #>     98:     sapply(\"g\", n = 1) #>   g at functions1.R#114: #>     114: g(1, y) #>   g at functions1.R#121: #>     121: g  ## print without cli-formatting print(chk$globals, use_cli = FALSE) #>  #> ── Unrecognized global functions or variables ────────────────────────────────── #>  #>  <name>     <location> #>  %>%()      functions1.R#97 #>  fAttach2() aaa.R#13 #>  fLoad2()   functions1.R#156 #>  g          aaa.R#2 and 13 more..."},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ","title":"Print ","text":"Print method S3-objects class \"checkglobalsi\" characteristic \"imports\" list element \"checkglobals\" objects returned checkglobals, check_pkg check_source.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ","text":"","code":"# S3 method for class 'checkglobalsi' print(x, format = \"basic\", pattern, ...)"},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ","text":"x object inheriting class \"checkglobalsi\". format character, one following two choices: \"basic\", (default) prints name source code location detected imports. \"detail\", prints name location detected imports, well lines source code file comprising detected imports. maximum number lines printed per source code reference can specified using maxLines. pattern optional regular expression.  names matching pattern returned. glob2rx can used convert wildcard patterns regular expressions. ... additional arguments configure printed output. following arguments can specified: .names, logical value.  TRUE, object names returned. FALSE, names begin . omitted. Defaults TRUE. includePkgs, character vector imported package names. imports packages printed. Defaults NA, includes detected packages printed output. maxRef, maximum number printed source code references per detected global/import. Defaults 1. maxLines, maximum number printed lines per source code reference, used format = \"detail\". Defaults 5. use_cli, logical value indicating cli used format printed output. Defaults TRUE, means cli-formatting attempted cli installed. maxWidth, maximum column width printed output. cli installed, default width determined cli::console_width(). cli installed, getOption(\"width\") checked. getOption(\"width\") undefined, column width defaults 80.","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ","text":"Returns object x invisibly (via invisible)","code":""},{"path":"https://jorischau.github.io/checkglobals/reference/print.checkglobalsi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ","text":"","code":"## R-package from folder chk <- checkglobals(   pkg = system.file(     \"unit_tests\", \"pkg\", \"testpkg\",     package = \"checkglobals\"   ) ) chk$imports #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6         [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ R6Class         functions1.R#139 #>  grid       [◼◻◻◻◻◻◻◻◻◻] 1/21 #>   └─ is.unit         functions1.R#35 #>  methods    [◼◼◼◻◻◻◻◻◻◻] 3/21 #>   ├─ getMethod       functions1.R#73 #>   ├─ setGeneric      functions1.R#54 #>   └─ setMethod       functions1.R#55 #>  parallel   [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ pvec            functions1.R#94 and 1 more... #>  stats      [◼◼◼◼◼◼◼◻◻◻] 7/21 #>   ├─ aggregate       functions1.R#93 #>   ├─ approxfun       functions1.R#77 #>   ├─ coef            functions1.R#75 and 1 more... #>   ├─ median          functions1.R#31 and 1 more... #>   └─ sd              functions1.R#161 #>  stats4     [◼◼◻◻◻◻◻◻◻◻] 2/21 #>   └─ coef            functions1.R#75 and 1 more... #>  utils      [◼◼◼◼◼◻◻◻◻◻] 5/21 #>   ├─ globalVariables aaa.R#1 and 1 more... #>   ├─ head            functions1.R#26 #>   ├─ maintainer      aaa.R#8 #>   └─ tail            functions1.R#71  ## print selected imports print(chk, format = \"detail\", pattern = \"coef\", which = \"import\", maxRef = 99) #> ! Packages required but not installed: pkgA #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  stats    [◼◼◻◻◻◻◻◻◻◻] 2/4 #>   └─ coef functions1.R#75 and 1 more... #>  stats4   [◼◼◻◻◻◻◻◻◻◻] 2/4 #>   └─ coef functions1.R#75 and 1 more... #>  #> ── Import source code references ─────────────────────────────────────────────── #>  #> • coef at functions1.R#75: #>     75: stats::coef(y) #>   coef at functions1.R#76: #>     76: stats4::coef(y)  ## print without cli-formatting print(chk$imports, use_cli = FALSE) #>  #> ── Detected imported functions or variables ──────────────────────────────────── #>  #>  R6         [◼◻◻◻◻◻◻◻◻◻] 1/21 #>    • R6Class         functions1.R#139 #>  grid       [◼◻◻◻◻◻◻◻◻◻] 1/21 #>    • is.unit         functions1.R#35 #>  methods    [◼◼◼◻◻◻◻◻◻◻] 3/21 #>    • getMethod       functions1.R#73 #>    • setGeneric      functions1.R#54 #>    • setMethod       functions1.R#55 #>  parallel   [◼◼◻◻◻◻◻◻◻◻] 2/21 #>    • pvec            functions1.R#94 and 1 more... #>  stats      [◼◼◼◼◼◼◼◻◻◻] 7/21 #>    • aggregate       functions1.R#93 #>    • approxfun       functions1.R#77 #>    • coef            functions1.R#75 and 1 more... #>    • median          functions1.R#31 and 1 more... #>    • sd              functions1.R#161 #>  stats4     [◼◼◻◻◻◻◻◻◻◻] 2/21 #>    • coef            functions1.R#75 and 1 more... #>  utils      [◼◼◼◼◼◻◻◻◻◻] 5/21 #>    • globalVariables aaa.R#1 and 1 more... #>    • head            functions1.R#26 #>    • maintainer      aaa.R#8 #>    • tail            functions1.R#71"},{"path":"https://jorischau.github.io/checkglobals/news/index.html","id":"checkglobals-013","dir":"Changelog","previous_headings":"","what":"checkglobals 0.1.3","title":"checkglobals 0.1.3","text":"CRAN release: 2025-02-06 Added support .onAttach, .onLoad .exit Additional display options print.checkglobals Added specific handlers <<- %>% (followed functional) Minor updates internal C functions","code":""},{"path":"https://jorischau.github.io/checkglobals/news/index.html","id":"checkglobals-011","dir":"Changelog","previous_headings":"","what":"checkglobals 0.1.1","title":"checkglobals 0.1.1","text":"Added support .Rmd .Rmarkdown files file argument.","code":""},{"path":"https://jorischau.github.io/checkglobals/news/index.html","id":"checkglobals-010","dir":"Changelog","previous_headings":"","what":"checkglobals 0.1.0","title":"checkglobals 0.1.0","text":"CRAN release: 2023-06-02 Initial cran release","code":""}]
